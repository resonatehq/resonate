name: Nix CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  check-nix:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Check Nix flake
        uses: DeterminateSystems/flake-checker-action@v5

  build-nix:
    runs-on: ${{ matrix.systems.runner }}
    strategy:
      matrix:
        systems:
          - nix-system: x86_64-linux
            runner: ubuntu-22.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v10

      - name: Use Magic Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@v4

      - name: Run golangci-lint
        run: |
          nix develop --command \
            golangci-lint run \
              --verbose \
              --timeout=3m
      
      - name: Run go test and generate coverage report
        run: |
          nix develop --command \
            go test \
              -v \
              -coverprofile=coverage.out \
              -coverpkg=./... \
              ./...
      
      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v4 # nosemgrep
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          codecov_yml_path: codecov.yml

      - name: Build resonate (Nix)
        run: |
          nix build ".#packages.${{ matrix.systems.nix-system }}.resonate"
      
      - name: Cache resonate binary
        uses: actions/cache/save@v4
        with:
          path: ./result/bin/resonate
          key: resonate-${{ github.sha }}
