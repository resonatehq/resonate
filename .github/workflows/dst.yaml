name: DST

on:
  schedule:
  - cron: '0 */4 * * *'  # every 4 hours
  pull_request:
    branches:
    - '*'

permissions:
  contents: read
  issues: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version-file: go.mod
        cache: false

    - name: Build resonate
      run: go build -o resonate

    - name: Upload resonate binary
      uses: actions/upload-artifact@v3
      with:
        name: resonate
        path: resonate

  seed:
    runs-on: ubuntu-latest
    steps:
    - id: seed
      name: Set random seed
      run: echo seed=$RANDOM >> $GITHUB_OUTPUT
    outputs:
      seed: ${{ steps.seed.outputs.seed }}

  dst-sqlite-1:
    runs-on: ubuntu-latest
    needs: [build, seed]
    timeout-minutes: 150

    # env:
    #   AIO_SUBSYSTEMS_STORE_CONFIG_POSTGRES_HOST: "localhost"
    #   AIO_SUBSYSTEMS_STORE_CONFIG_POSTGRES_PORT: "5432"
    #   AIO_SUBSYSTEMS_STORE_CONFIG_POSTGRES_USERNAME: "username"
    #   AIO_SUBSYSTEMS_STORE_CONFIG_POSTGRES_PASSWORD: "password"

    steps:
    # - name: Install docker-compose
    #   run: |
    #     sudo apt-get update
    #     sudo apt-get -y install docker-compose

    # - name: Start docker-compose
    #   run: |
    #     docker-compose up -d

    - name: Download resonate binary
      uses: actions/download-artifact@v3
      with:
        name: resonate

    - id: dst
      name: Run dst (seed=${{ needs.seed.outputs.seed }})
      continue-on-error: true
      run: |
        chmod +x resonate
        ./resonate dst run --seed ${{ needs.seed.outputs.seed }} --ticks 10 --aio-store sqlite > logs.txt

    - name: Create issue if dst failed
      env:
        GITHUB_TOKEN: ${{ secrets.github_token }}
      if: steps.dst.outcome != 'success'
      run: |
        ./resonate dst issue \
          --seed ${{ needs.seed.outputs.seed }} \
          --store sqlite \
          --reason "DST run failed for seed=${{ needs.seed.outputs.seed }} and store=sqlite." \
          --file logs.txt \
          --repo $GITHUB_REPOSITORY \
          --commit $GITHUB_SHA

    - uses: actions/upload-artifact@v3
      with:
        name: sqlite-logs-1
        path: logs.txt

  dst-sqlite-2:
    runs-on: ubuntu-latest
    needs: [build, seed]
    timeout-minutes: 150
    steps:
    - name: Download resonate binary
      uses: actions/download-artifact@v3
      with:
        name: resonate

    - id: dst
      name: Run dst (seed=${{ needs.seed.outputs.seed }})
      continue-on-error: true
      run: |
        chmod +x resonate
        ./resonate dst run --seed ${{ needs.seed.outputs.seed }} --ticks 10 --aio-store sqlite > logs.txt

    - name: Create issue if dst failed
      env:
        GITHUB_TOKEN: ${{ secrets.github_token }}
      if: steps.dst.outcome != 'success'
      run: |
        ./resonate dst issue \
          --seed ${{ needs.seed.outputs.seed }} \
          --store sqlite \
          --reason "DST run failed for seed=${{ needs.seed.outputs.seed }} and store=sqlite." \
          --file logs.txt \
          --repo $GITHUB_REPOSITORY \
          --commit $GITHUB_SHA

    - uses: actions/upload-artifact@v3
      with:
        name: sqlite-logs-2
        path: logs.txt
    
  dst-sqlite-diff:
    runs-on: ubuntu-latest
    needs: [dst-sqlite-1, dst-sqlite-2]
    steps:
    - name: Download logs from run 1
      uses: actions/download-artifact@v3
      with:
        name: sqlite-logs-1
        path: logs-1.txt
    - name: Download logs from run 2
      uses: actions/download-artifact@v3
      with:
        name: sqlite-logs-2
        path: logs-2.txt
    - name: Diff
      run: |
        diff logs-1.txt logs-2.txt
