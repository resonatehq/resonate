name: CICD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      TEST_AIO_SUBSYSTEMS_STORE_CONFIG_POSTGRES_HOST: "localhost"
      TEST_AIO_SUBSYSTEMS_STORE_CONFIG_POSTGRES_PORT: "5432"
      TEST_AIO_SUBSYSTEMS_STORE_CONFIG_POSTGRES_USERNAME: "username"
      TEST_AIO_SUBSYSTEMS_STORE_CONFIG_POSTGRES_PASSWORD: "password"
      TEST_AIO_SUBSYSTEMS_STORE_CONFIG_POSTGRES_DATABASE: "resonate_test"

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ env.TEST_AIO_SUBSYSTEMS_STORE_CONFIG_POSTGRES_USERNAME }}
          POSTGRES_PASSWORD: ${{ env.TEST_AIO_SUBSYSTEMS_STORE_CONFIG_POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.TEST_AIO_SUBSYSTEMS_STORE_CONFIG_POSTGRES_DATABASE }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: false

      - name: Install and run golangci-lint
        uses: golangci/golangci-lint-action@v4 # nosemgrep
        with:
          version: v1.54
          args: --verbose --timeout=3m

      - name: Run go test and generate coverage report
        run: |
          go test -v -coverprofile=coverage.out -coverpkg=./... ./...

      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v4 # nosemgrep
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Build resonate
        run: go build -o resonate

      - name: Cache resonate binary
        uses: actions/cache/save@v4
        with:
          path: resonate
          key: resonate-${{ github.sha }}

  test:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Restore resonate binary
        uses: actions/cache/restore@v4
        with:
          path: resonate
          key: resonate-${{ github.sha }}
          fail-on-cache-miss: true

      - name: Run resonate server
        run: |
          chmod +x resonate
          ./resonate serve --aio-store-sqlite-path :memory: &

      - name: Checkout test harness
        uses: actions/checkout@v4
        with:
          repository: resonatehq/durable-promise-test-harness

      - name: Build test harness
        run: |
          go build -o harness

      - name: Run linearizability check
        run: |
          chmod +x harness
          ./harness verify -r 1000 -c 10

      - uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: test-harness-results
          path: test/results/

  scan:
    name: semgrep
    needs: [build]
    runs-on: ubuntu-20.04
    env:
      SEMGREP_RULES: "auto semgrep.yml"
    container:
      image: returntocorp/semgrep
    if: (github.actor != 'dependabot[bot]')
    steps:
      - uses: actions/checkout@v4
      - run: semgrep ci
