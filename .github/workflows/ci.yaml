name: CI

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

permissions:
  contents: read

jobs:
  ci:
    runs-on: ubuntu-latest

    env:
      AIO_SUBSYSTEMS_STORE_CONFIG_POSTGRES_HOST: "localhost"
      AIO_SUBSYSTEMS_STORE_CONFIG_POSTGRES_PORT: "5432"
      AIO_SUBSYSTEMS_STORE_CONFIG_POSTGRES_USERNAME: "username"
      AIO_SUBSYSTEMS_STORE_CONFIG_POSTGRES_PASSWORD: "password"
      AIO_SUBSYSTEMS_STORE_CONFIG_POSTGRES_TEST_DATABASE: "resonate_test"

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ env.AIO_SUBSYSTEMS_STORE_CONFIG_POSTGRES_USERNAME }}
          POSTGRES_PASSWORD: ${{ env.AIO_SUBSYSTEMS_STORE_CONFIG_POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.AIO_SUBSYSTEMS_STORE_CONFIG_POSTGRES_TEST_DATABASE }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
        - 5432:5432

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version-file: go.mod
        cache: false

    - name: Install and run golangci-lint
      uses: golangci/golangci-lint-action@v3 # nosemgrep
      with:
        version: v1.54
        args: --verbose --timeout=3m

    - name: Run go test and generate coverage report
      run: |
        go test -v -coverprofile=coverage.out -coverpkg=./... ./...

    - name: Upload coverage report to Codecov
      uses: codecov/codecov-action@v3 # nosemgrep
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  semgrep:
    name: semgrep
    runs-on: ubuntu-20.04
    env:
      SEMGREP_RULES: "auto semgrep.yml"
    container:
      image: returntocorp/semgrep
    if: (github.actor != 'dependabot[bot]')
    steps:
    - uses: actions/checkout@v3
    - run: semgrep ci
