openapi: 3.0.0
info:
  title: Schedules API
  version: 1.0.0
paths:
  /schedules:
    post:
      tags:
        - Schedules
      summary: Create a new schedule
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - cron
                - promiseId
                - promiseTimeout
              properties:
                id:
                  type: string
                description:
                  type: string
                cron:
                  type: string
                tags:
                  type: object
                  additionalProperties:
                    type: string
                promiseId:
                  type: string
                promiseTimeout:
                  type: integer
                  format: int64
                promiseParam:
                  $ref: "#/components/schemas/PromiseValue"
                promiseTags:
                  type: object
                  additionalProperties:
                    type: string
        required: true
      responses:
        "200":
          description: Successfully created a schedule
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Schedule"

    get:
      tags:
        - Schedules
      summary: Search schedules
      operationId: searchSchedules
      parameters:
        - name: id
          in: query
          description: |
            Search schedules for matching IDs, can include wildcards.

            For example:
            - "foo/*" matches all IDs starting with "foo/"
            - "*/bar" matches all IDs starting with "bar/"
            - "foo/*/bar" matches all IDs starting with "foo/" and ending with "/bar"
          schema:
            type: string
        - name: tags
          in: query
          style: deepObject
          explode: true
          schema:
            type: object
            additionalProperties:
              type: string
        - name: limit
          in: query
          description: Number of results
          schema:
            type: integer
        - name: cursor
          in: query
          description: Cursor for pagination
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  cursor:
                    type: string
                  schedules:
                    type: array
                    items:
                      $ref: "#/components/schemas/Schedule"
        400:
          description: Invalid request

  /schedules/{id}:
    get:
      tags:
        - Schedules
      summary: Get a schedule
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Successfully retrieved the schedule
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Schedule"
        "404":
          description: Schedule not found

    delete:
      tags:
        - Schedules
      summary: Delete a schedule
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        "204":
          description: Successfully deleted the schedule
        "404":
          description: Schedule not found

components:
  schemas:
    Schedule:
      type: object
      required:
        - id
        - description
        - cron
        - tags
        - promiseId
        - promiseTimeout
        - promiseParam
        - promiseTags
      properties:
        id:
          type: string
        description:
          type: string
        cron:
          type: string
        tags:
          type: object
          additionalProperties:
            type: string
        promiseId:
          type: string
        promiseTimeout:
          type: integer
          format: int64
        promiseParam:
          $ref: "#/components/schemas/PromiseValue"
        promiseTags:
          type: object
          additionalProperties:
            type: string
        lastRunTime:
          type: integer
          readOnly: true
          format: int64
        nextRunTime:
          type: integer
          readOnly: true
          format: int64
        idempotencyKey:
          type: string
          readOnly: true
        createdOn:
          type: integer
          readOnly: true
          format: int64

    PromiseValue:
      type: object
      required:
        - headers
      properties:
        data:
          type: string
        headers:
          type: object
          additionalProperties:
            type: string
