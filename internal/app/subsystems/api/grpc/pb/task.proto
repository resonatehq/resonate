syntax = "proto3";

package task;

import "internal/app/subsystems/api/grpc/pb/promise_t.proto";

option go_package = "github.com/resonatehq/resonate/internal/app/subsystems/api/grpc/pb";

service Tasks {
    rpc ClaimTask (ClaimTaskRequest) returns (ClaimTaskResponse) {}
    rpc CompleteTask (CompleteTaskRequest) returns (CompleteTaskResponse) {}
    rpc HeartbeatTasks (HeartbeatTasksRequest) returns (HeartbeatTasksResponse) {}
}

message ClaimTaskRequest {
    string id = 1;
    int32 counter = 2;
    string processId = 3;
    int32 ttl = 4;
    string requestId = 5;
}

message ClaimTaskResponse {
    bool claimed = 1;
    Mesg mesg = 2;
}

message Mesg {
    string type = 1;
    map<string, MesgPromise> promises = 2;
}

message MesgPromise {
    string id = 1;
    string href = 2;
    promise_t.Promise data = 3;
}

message CompleteTaskRequest {
    string id = 1;
    int32 counter = 2;
    string requestId = 3;
}

message CompleteTaskResponse {
    bool completed = 1;
}

message HeartbeatTasksRequest {
    string processId = 1;
    string requestId = 2;
}

message HeartbeatTasksResponse {
    int64 tasksAffected = 1;
}
